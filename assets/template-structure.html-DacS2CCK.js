import{_ as e,c as t,a as s,o as r}from"./app-C0EXnKUC.js";const o="/assets/TRCLibArchitecture-Bv7NxOqL.png",n={};function l(i,a){return r(),t("div",null,a[0]||(a[0]=[s('<h1 id="ftctemplate-structure" tabindex="-1"><a class="header-anchor" href="#ftctemplate-structure"><span>FtcTemplate Structure</span></a></h1><p>The goal of this section is to help you get comfortable with the layout of TrcLib. We&#39;ll be focusing mainly on the user-side structure. Before we dive in, it&#39;s helpful to have a basic understanding of the backend layout so you know how everything is structured. It’s recommended that you’ve completed the <a href="https://trc492.github.io/installing.md" target="_blank" rel="noopener noreferrer">installation</a> process and have Android Studio open with the FtcTemplate project open.</p><img src="'+o+`" alt="TRC Architecture" style="border-radius:12px;width:100%;max-width:800px;"><p>If you look at the image above, you’ll notice that FtcTemplate is supported by two libraries: TrcLib and FtcLib. This structure exists because the TRC Robotics Framework is designed to support both FRC and FTC. To make that possible, there&#39;s a shared core library—TrcLib—that handles most of the core logic and software optimizations. However, since FRC and FTC are different platforms with different hardware, each requires platform-specific support. Just as FIRST provides separate SDKs for each, the TRC Framework includes a platform-specific layer like FtcLib to interface with the FTC SDK and support any features unique to FTC that aren’t shared with FRC.</p><pre class="files"><div class="files-block-title">FtcTemplate File Structure</div>
<span class="folder">FtcRobotController</span>
<span class="folder">TeamCode</span>
 ├──<span class="folder">manifests</span>
 ├──<span class="folder">java</span>
 │   ├──<span class="folder">ftclib</span>
 │   ├──<span class="folder">teamcode</span>
 │   │   ├──<span class="folder">autocommands</span>
 │   │   ├──<span class="folder">subsystems</span>
 │   │   ├──<span class="folder">tasks</span>
 │   │   ├──<span class="folder">vision</span>
 │   │   ├──<span class="file">Dashboard</span>
 │   │   ├──<span class="file">FtcAuto</span>
 │   │   ├──<span class="file">FtcTeleOp</span>
 │   │   ├──<span class="file">FtcTest</span>
 │   │   ├──<span class="file">LICENSE</span>
 │   │   ├──<span class="file">Robot</span>
 │   │   └──<span class="file">RobotParams</span>
 │   └──<span class="folder">trclib</span>
 └──<span class="folder">res</span>
<span class="folder">Gradle Scripts</span>
</pre><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>This file structure is what you’ll see when viewing the project through Android Studios. If you view FtcTemplate on GitHub, it will look slightly different.</p></div><h2 id="autocommands" tabindex="-1"><a class="header-anchor" href="#autocommands"><span>AutoCommands</span></a></h2><h2 id="autotasks" tabindex="-1"><a class="header-anchor" href="#autotasks"><span>AutoTasks</span></a></h2><h2 id="subsystems" tabindex="-1"><a class="header-anchor" href="#subsystems"><span>Subsystems</span></a></h2><h2 id="ftcauto-java" tabindex="-1"><a class="header-anchor" href="#ftcauto-java"><span>FtcAuto.java</span></a></h2><h2 id="ftcteleop-java" tabindex="-1"><a class="header-anchor" href="#ftcteleop-java"><span>FtcTeleOp.java</span></a></h2><h2 id="ftctest-java" tabindex="-1"><a class="header-anchor" href="#ftctest-java"><span>FtcTest.java</span></a></h2><h2 id="robot-java" tabindex="-1"><a class="header-anchor" href="#robot-java"><span>Robot.java</span></a></h2><h2 id="robotparams-java" tabindex="-1"><a class="header-anchor" href="#robotparams-java"><span>RobotParams.java</span></a></h2>`,14)]))}const p=e(n,[["render",l]]),h=JSON.parse('{"path":"/template-structure.html","title":"FtcTemplate Structure","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"AutoCommands","slug":"autocommands","link":"#autocommands","children":[]},{"level":2,"title":"AutoTasks","slug":"autotasks","link":"#autotasks","children":[]},{"level":2,"title":"Subsystems","slug":"subsystems","link":"#subsystems","children":[]},{"level":2,"title":"FtcAuto.java","slug":"ftcauto-java","link":"#ftcauto-java","children":[]},{"level":2,"title":"FtcTeleOp.java","slug":"ftcteleop-java","link":"#ftcteleop-java","children":[]},{"level":2,"title":"FtcTest.java","slug":"ftctest-java","link":"#ftctest-java","children":[]},{"level":2,"title":"Robot.java","slug":"robot-java","link":"#robot-java","children":[]},{"level":2,"title":"RobotParams.java","slug":"robotparams-java","link":"#robotparams-java","children":[]}],"git":{"updatedTime":1746339639000,"contributors":[{"name":"roialrogue","username":"roialrogue","email":"144475675+roialrogue@users.noreply.github.com","commits":2,"url":"https://github.com/roialrogue"}],"changelog":[{"hash":"6d5fc6b6ff41b66879c3b93047e371b313eb42b4","time":1746339639000,"email":"144475675+roialrogue@users.noreply.github.com","author":"roialrogue","message":"Setup file structures with css"},{"hash":"1e9c1b6e7632ddd8102eec49bedc35a6e344ef64","time":1746073029000,"email":"144475675+roialrogue@users.noreply.github.com","author":"roialrogue","message":"Added Config.yml and  starter webPages"}]},"filePathRelative":"template-structure.md"}');export{p as comp,h as data};
